<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="3" total="7" passed="3">
  <reporter-output>
  </reporter-output>
  <suite name="Poc_suite" duration-ms="213858" started-at="2020-03-17T03:43:20Z" finished-at="2020-03-17T03:46:54Z">
    <groups>
    </groups>
    <test name="Patricia_Poc" duration-ms="213858" started-at="2020-03-17T03:43:20Z" finished-at="2020-03-17T03:46:54Z">
      <class name="test.TestSearchforNegativeCase">
        <test-method status="PASS" signature="testBeforeClass()[pri:0, instance:test.TestSearchforNegativeCase@6e0e048a]" name="testBeforeClass" is-config="true" duration-ms="11947" started-at="2020-03-17T09:16:04Z" finished-at="2020-03-17T09:16:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBeforeClass -->
        <test-method status="FAIL" signature="testSearchCase()[pri:0, instance:test.TestSearchforNegativeCase@6e0e048a]" name="testSearchCase" duration-ms="29622" started-at="2020-03-17T09:16:16Z" finished-at="2020-03-17T09:16:45Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[There are No documents available]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: There are No documents available
	at org.testng.Assert.fail(Assert.java:93)
	at pages.webAction.documentWidget(webAction.java:236)
	at test.TestSearchforNegativeCase.testSearchCase(TestSearchforNegativeCase.java:35)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearchCase -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:test.TestSearchforNegativeCase@6e0e048a]" name="getResult" is-config="true" duration-ms="443" started-at="2020-03-17T09:16:45Z" finished-at="2020-03-17T09:16:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSearchCase status=FAILURE method=TestSearchforNegativeCase.testSearchCase()[pri:0, instance:test.TestSearchforNegativeCase@6e0e048a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="testAfterClass()[pri:0, instance:test.TestSearchforNegativeCase@6e0e048a]" name="testAfterClass" is-config="true" duration-ms="8432" started-at="2020-03-17T09:16:46Z" finished-at="2020-03-17T09:16:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAfterClass -->
      </class> <!-- test.TestSearchforNegativeCase -->
      <class name="test.TestcaseCreation">
        <test-method status="PASS" signature="before_suite()[pri:0, instance:test.TestcaseCreation@887af79]" name="before_suite" is-config="true" duration-ms="61" started-at="2020-03-17T09:13:20Z" finished-at="2020-03-17T09:13:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before_suite -->
        <test-method status="PASS" signature="testBeforeClass()[pri:0, instance:test.TestcaseCreation@887af79]" name="testBeforeClass" is-config="true" duration-ms="12513" started-at="2020-03-17T09:13:20Z" finished-at="2020-03-17T09:13:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBeforeClass -->
        <test-method status="PASS" signature="testCaseCreation()[pri:0, instance:test.TestcaseCreation@887af79]" name="testCaseCreation" duration-ms="45194" started-at="2020-03-17T09:13:33Z" finished-at="2020-03-17T09:14:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCaseCreation -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:test.TestcaseCreation@887af79]" name="getResult" is-config="true" duration-ms="1" started-at="2020-03-17T09:14:18Z" finished-at="2020-03-17T09:14:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testCaseCreation status=SUCCESS method=TestcaseCreation.testCaseCreation()[pri:0, instance:test.TestcaseCreation@887af79] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="testAfterClass()[pri:0, instance:test.TestcaseCreation@887af79]" name="testAfterClass" is-config="true" duration-ms="8626" started-at="2020-03-17T09:14:18Z" finished-at="2020-03-17T09:14:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAfterClass -->
      </class> <!-- test.TestcaseCreation -->
      <class name="test.TestDocumentPreview">
        <test-method status="PASS" signature="testBeforeClass()[pri:0, instance:test.TestDocumentPreview@5b87ed94]" name="testBeforeClass" is-config="true" duration-ms="11606" started-at="2020-03-17T09:15:19Z" finished-at="2020-03-17T09:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBeforeClass -->
        <test-method status="PASS" signature="testDocumentPreview()[pri:0, instance:test.TestDocumentPreview@5b87ed94]" name="testDocumentPreview" duration-ms="24696" started-at="2020-03-17T09:15:31Z" finished-at="2020-03-17T09:15:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDocumentPreview -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:test.TestDocumentPreview@5b87ed94]" name="getResult" is-config="true" duration-ms="1" started-at="2020-03-17T09:15:55Z" finished-at="2020-03-17T09:15:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testDocumentPreview status=SUCCESS method=TestDocumentPreview.testDocumentPreview()[pri:0, instance:test.TestDocumentPreview@5b87ed94] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="testAfterClass()[pri:0, instance:test.TestDocumentPreview@5b87ed94]" name="testAfterClass" is-config="true" duration-ms="8456" started-at="2020-03-17T09:15:55Z" finished-at="2020-03-17T09:16:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAfterClass -->
      </class> <!-- test.TestDocumentPreview -->
      <class name="test.TestAddDocument">
        <test-method status="PASS" signature="testBeforeClass()[pri:0, instance:test.TestAddDocument@7fac631b]" name="testBeforeClass" is-config="true" duration-ms="11806" started-at="2020-03-17T09:14:27Z" finished-at="2020-03-17T09:14:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBeforeClass -->
        <test-method status="PASS" signature="testAddDocument()[pri:0, instance:test.TestAddDocument@7fac631b]" name="testAddDocument" duration-ms="32081" started-at="2020-03-17T09:14:38Z" finished-at="2020-03-17T09:15:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddDocument -->
        <test-method status="PASS" signature="testAfterClass()[pri:0, instance:test.TestAddDocument@7fac631b]" name="testAfterClass" is-config="true" duration-ms="8421" started-at="2020-03-17T09:15:11Z" finished-at="2020-03-17T09:15:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAfterClass -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:test.TestAddDocument@7fac631b]" name="getResult" is-config="true" duration-ms="0" started-at="2020-03-17T09:15:11Z" finished-at="2020-03-17T09:15:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAddDocument status=SUCCESS method=TestAddDocument.testAddDocument()[pri:0, instance:test.TestAddDocument@7fac631b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- test.TestAddDocument -->
    </test> <!-- Patricia_Poc -->
  </suite> <!-- Poc_suite -->
</testng-results>
